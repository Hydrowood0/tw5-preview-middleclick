{"title":"$:/plugins/tobibeer/preview","description":"Shows a tiddler preview when hovering internal links","author":"Tobias Beer","version":"0.5.6","core-version":">=5.1.9","source":"https://github.com/tobibeer/tw5-preview","documentation":"https://tobibeer.github.io/tw5-preview","plugin-type":"plugin","requires":"[[tobibeer/appear|http://tobibeer.github.io/tw5-plugins/#appear]]","list":"readme config","dependents":"","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/tobibeer/preview/config\":{\"title\":\"$:/plugins/tobibeer/preview/config\",\"text\":\"\\\\define default()\\r\\n<dt>$(defaults)$$(option)$</dt>\\r\\n<dd>\\r\\n//{{$:/plugins/tobibeer/preview/lingo/$(option)$}}<$list\\r\\nfilter=\\\"[[$(option)$]prefix[template]]\\\">\\r\\n{{$(defaults)$$(option)$}}</$list>://<br>\\r\\n<$edit-text tag=input tiddler=\\\"$(defaults)$$(option)$\\\"/>\\r\\n</dd>\\r\\n\\\\end\\n\\n<dl class=\\\"preview-defaults\\\">\\r\\n<$vars defaults=\\\"$:/plugins/tobibeer/preview/defaults/\\\">\\r\\n<$list filter=\\\"[all[tiddlers+shadows]removeprefix<defaults>sort[title]]\\\" variable=\\\"option\\\">\\r\\n<<default>>\\r\\n</$list>\\r\\n</$vars>\\r\\n</dl>\\r\\n<style>.preview-defaults input {width:90%;}</style>\"},\"$:/plugins/tobibeer/preview/lingo/middleclickpreview\":{\"title\":\"$:/plugins/tobibeer/preview/lingo/middleclickpreview\",\"text\":\"Enable middle-click preview( only value \\\"enable\\\" is on) 启用中键触发预览(仅值为\\\"enable\\\"时开启)\"},\"$:/plugins/tobibeer/preview/defaults/middleclickpreview\":{\"title\":\"$:/plugins/tobibeer/preview/defaults/middleclickpreview\",\"text\":\"enable\"},\"$:/plugins/tobibeer/preview/lingo/keys\":{\"title\":\"$:/plugins/tobibeer/preview/lingo/keys\",\"text\":\"modifier keys to trigger popup directly on-hover (ctrl, alt+shift, meta, etc...)\"},\"$:/plugins/tobibeer/preview/defaults/keys\":{\"title\":\"$:/plugins/tobibeer/preview/defaults/keys\",\"text\":\"CTRL\"},\"$:/plugins/tobibeer/preview/lingo/delay\":{\"title\":\"$:/plugins/tobibeer/preview/lingo/delay\",\"text\":\"delay popup for this many milliseconds\"},\"$:/plugins/tobibeer/preview/defaults/delay\":{\"title\":\"$:/plugins/tobibeer/preview/defaults/delay\",\"text\":\"1500\"},\"$:/plugins/tobibeer/preview/lingo/class\":{\"title\":\"$:/plugins/tobibeer/preview/lingo/class\",\"text\":\"css classes applied to the popup\"},\"$:/plugins/tobibeer/preview/defaults/class\":{\"title\":\"$:/plugins/tobibeer/preview/defaults/class\",\"text\":\"tc-popup-keep\"},\"$:/plugins/tobibeer/preview/lingo/not\":{\"title\":\"$:/plugins/tobibeer/preview/lingo/not\",\"text\":\"no preview for links inside elements with these classes\"},\"$:/plugins/tobibeer/preview/defaults/not\":{\"title\":\"$:/plugins/tobibeer/preview/defaults/not\",\"text\":\"tc-drop-down tc-sidebar-scrollable tc-topbar tc-tiddler-title\"},\"$:/plugins/tobibeer/preview/lingo/exclude\":{\"title\":\"$:/plugins/tobibeer/preview/lingo/exclude\",\"text\":\"no preview for links to tiddlers matching this filter\"},\"$:/plugins/tobibeer/preview/defaults/exclude\":{\"title\":\"$:/plugins/tobibeer/preview/defaults/exclude\",\"text\":\"[is[system]] [all[shadows]] [!has[text]]\"},\"$:/plugins/tobibeer/preview/lingo/template\":{\"title\":\"$:/plugins/tobibeer/preview/lingo/template\",\"text\":\"the preview template\"},\"$:/plugins/tobibeer/preview/defaults/template\":{\"title\":\"$:/plugins/tobibeer/preview/defaults/template\",\"text\":\"$:/plugins/tobibeer/preview/template\"},\"$:/plugins/tobibeer/preview/lingo/open\":{\"title\":\"$:/plugins/tobibeer/preview/lingo/open\",\"text\":\"view at ''<<WIKI>>''\"},\"$:/plugins/tobibeer/preview/keyboard.js\":{\"title\":\"$:/plugins/tobibeer/preview/keyboard.js\",\"text\":\"/*\\\\\\r\\ntitle: $:/plugins/tobibeer/preview/keyboard.js\\r\\ntype: application/javascript\\r\\nmodule-type: utils\\r\\n\\r\\nFixes $:/core/modules/utils/dom/keyboard.js by providing an alternative.\\r\\nDo not use as an API, let's fix the core.\\r\\n\\r\\n@preserve\\r\\n\\\\*/\\r\\n(function(){\\r\\n\\r\\n/*jslint node: true, browser: true */\\r\\n/*global $tw: false */\\r\\n\\\"use strict\\\";\\r\\n\\r\\nvar namedKeys = {\\r\\n\\t\\\"BACKSPACE\\\": 8,\\r\\n\\t\\\"TAB\\\": 9,\\r\\n\\t\\\"ENTER\\\": 13,\\r\\n\\t\\\"ESCAPE\\\": 27,\\r\\n\\t\\\"PAGEUP\\\": 33,\\r\\n\\t\\\"PAGEDOWN\\\": 34,\\r\\n\\t\\\"END\\\": 35,\\r\\n\\t\\\"HOME\\\": 36,\\r\\n\\t\\\"LEFT\\\":\\t37,\\r\\n\\t\\\"UP\\\": 38,\\r\\n\\t\\\"RIGHT\\\": 39,\\r\\n\\t\\\"DOWN\\\": 40,\\r\\n\\t\\\"INSERT\\\": 45,\\r\\n\\t\\\"DELETE\\\": 46\\r\\n};\\r\\n\\r\\n/*\\r\\nParses a key descriptor into the structure:\\r\\n{\\r\\n\\tkeyCode: numeric keycode\\r\\n\\tshiftKey: boolean\\r\\n\\taltKey: boolean\\r\\n\\tctrlKey: boolean\\r\\n}\\r\\nKey descriptors have the following format:\\r\\n\\tctrl+enter\\r\\n\\tctrl+shift+alt+A\\r\\n*/\\r\\nexports.parseKeyDescriptorTB = function(keyDescriptor) {\\r\\n\\tvar neg,s,t,\\r\\n\\t\\tcomponents = keyDescriptor.toUpperCase().split(\\\"+\\\"),\\r\\n\\t\\tinfo = {\\r\\n\\t\\t\\tkeyCode: null,\\r\\n\\t\\t\\tshiftKey: false,\\r\\n\\t\\t\\taltKey: false,\\r\\n\\t\\t\\tctrlKey: false\\r\\n\\t\\t};\\r\\n\\tfor(t=0; t<components.length; t++) {\\r\\n\\t\\tneg = false;\\r\\n\\t\\ts = components[t];\\r\\n\\t\\t// Look for negation\\r\\n\\t\\tif(s.substr(0,1) === \\\"!\\\") {\\r\\n\\t\\t\\tneg = true;\\r\\n\\t\\t\\ts = s.substr(1);\\r\\n\\t\\t}\\r\\n\\t\\t// Look for modifier keys\\r\\n\\t\\tif(s === \\\"CTRL\\\") {\\r\\n\\t\\t\\tinfo.ctrlKey = neg ? null : true;\\r\\n\\t\\t} else if(s === \\\"SHIFT\\\") {\\r\\n\\t\\t\\tinfo.shiftKey =  neg ? null : true;\\r\\n\\t\\t} else if(s === \\\"ALT\\\") {\\r\\n\\t\\t\\tinfo.altKey =  neg ? null : true;\\r\\n\\t\\t} else if(s === \\\"META\\\") {\\r\\n\\t\\t\\tinfo.metaKey =  neg ? null : true;\\r\\n\\t\\t// Replace named keys with their code\\r\\n\\t\\t} else if(namedKeys[s]) {\\r\\n\\t\\t\\tinfo.keyCode = namedKeys[s];\\r\\n\\t\\t// Normal letter\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tinfo.keyCode = s.charCodeAt(0);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn info;\\r\\n};\\r\\n\\r\\nexports.checkKeyDescriptorTB = function(event,keyInfo) {\\r\\n\\tvar metaKeyStatus = !!keyInfo.metaKey; // Using a temporary variable to keep JSHint happy\\r\\n\\treturn (keyInfo.keyCode === null || event.keyCode === keyInfo.keyCode) &&\\r\\n\\t\\t(keyInfo.shiftKey === null ? !event.shiftKey : event.shiftKey === keyInfo.shiftKey) &&\\r\\n\\t\\t(keyInfo.altKey === null ? !event.altKey : event.altKey === keyInfo.altKey) &&\\r\\n\\t\\t(keyInfo.ctrlKey === null ? !event.ctrlKey : event.ctrlKey === keyInfo.ctrlKey) &&\\r\\n\\t\\t(keyInfo.metaKey === null ? !event.metaKey : event.metaKey === metaKeyStatus);\\r\\n};\\r\\n\\r\\n})();\\r\\n\",\"type\":\"application/javascript\",\"module-type\":\"utils\"},\"$:/plugins/tobibeer/preview/link.js\":{\"title\":\"$:/plugins/tobibeer/preview/link.js\",\"text\":\"/*\\\\\\r\\ntitle: $:/plugins/tobibeer/preview/link.js\\r\\ntype: application/javascript\\r\\nmodule-type: startup\\r\\n<<<<<<< HEAD\\r\\n\\r\\nEnhances the link widget for on-hover previews\\r\\n\\r\\n=======\\r\\nEnhances the link widget for on-hover previews & middleclick($:/plugins/EvidentlyCube/MiddleClickActions needed)\\r\\n>>>>>>> parent of 7d93692 (Revert \\\"仅用vscode格式化linkjs\\\")\\r\\n@preserve\\r\\n\\\\*/\\r\\n/*jslint node: true, browser: true */\\r\\n/*global $tw: false */\\r\\n\\r\\n(function () {\\r\\nvar // Global flag to stop mouseover madness\\r\\n\\tblock,\\r\\n\\t// Get core link widget\\r\\n\\tCoreLink = require('$:/core/modules/widgets/link.js').link,\\r\\n\\t// Store ref to render() and handleClickEvent()\\r\\n\\trenderCore = CoreLink.prototype.render,\\r\\n\\tclickCore = CoreLink.prototype.handleClickEvent;\\r\\n\\r\\n<<<<<<< HEAD\\r\\n\\tvar\\r\\n\\t\\t// Global flag to stop mouseover madness\\r\\n\\t\\tblock,\\r\\n\\t\\t// Get core link widget\\r\\n\\t\\tCoreLink = require(\\\"$:/core/modules/widgets/link.js\\\").link,\\r\\n\\t\\t// Store ref to render() and handleClickEvent()\\r\\n\\t\\trenderCore = CoreLink.prototype.render,\\r\\n\\t\\tclickCore = CoreLink.prototype.handleClickEvent;\\r\\n\\r\\n\\t// Hijack core link widget render()\\r\\n\\tCoreLink.prototype.render = function () {\\r\\n\\t\\t// Run core handler\\r\\n\\t\\trenderCore.apply(this, arguments);\\r\\n\\t\\tvar self = this,\\r\\n\\t\\t\\twiki = this.wiki,\\r\\n\\t\\t\\t// The link node\\r\\n\\t\\t\\tel = this.domNodes[0],\\r\\n\\t\\t\\t// Target tiddler\\r\\n\\t\\t\\tto = wiki.getTiddler(self.to),\\r\\n\\t\\t\\t// Shortcut to defaults namespace\\r\\n\\t\\t\\tdefaults = \\\"$:/plugins/tobibeer/preview/defaults/\\\",\\r\\n\\t\\t\\t// Shortcut to preview namespace\\r\\n\\t\\t\\tpreview = \\\"$:/temp/tobibeer/preview-\\\",\\r\\n\\t\\t\\t// Modifier keys to quick-show the popup w/o delay\\r\\n\\t\\t\\tkeys = $tw.utils.parseKeyDescriptorTB(wiki.getTextReference(defaults + \\\"keys\\\", \\\"\\\").toUpperCase()),\\r\\n\\t\\t\\t// Delay for popup rendering\\r\\n\\t\\t\\tdelay = wiki.getTextReference(defaults + \\\"delay\\\").toUpperCase(),\\r\\n\\t\\t\\t//Check if popup already open\\r\\n\\t\\t\\tgetInfo = function (el) {\\r\\n\\t\\t\\t\\t// Get current popup level\\r\\n\\t\\t\\t\\tvar info = $tw.popup.popupInfo(el),\\r\\n\\t\\t\\t\\t\\t// Get current popup level\\r\\n\\t\\t\\t\\t\\tlevel = info.popupLevel;\\r\\n\\t\\t\\t\\treturn (\\r\\n\\t\\t\\t\\t\\twiki.getTextReference(preview + level) &&\\r\\n\\t\\t\\t\\t\\t\\twiki.getTextReference(preview + level + \\\"-tiddler\\\") === self.to ?\\r\\n\\t\\t\\t\\t\\t\\tnull :\\r\\n\\t\\t\\t\\t\\t\\tinfo\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t// Displays the preview popup\\r\\n\\t\\t\\tshowPopup = function () {\\r\\n\\t\\t\\t\\tvar level,\\r\\n\\t\\t\\t\\t\\t// Get info (only if not open yet)\\r\\n\\t\\t\\t\\t\\tinfo = getInfo(el);\\r\\n\\t\\t\\t\\t// Not open yet and not yet blocking mouseover madness?\\r\\n\\t\\t\\t\\tif (info) {\\r\\n\\t\\t\\t\\t\\t// Get current popup level\\r\\n\\t\\t\\t\\t\\tlevel = info.popupLevel;\\r\\n\\t\\t\\t\\t\\t// Stop waiting for other popups to pop up\\r\\n\\t\\t\\t\\t\\tclearTimeout(self.previewTimeout);\\r\\n\\t\\t\\t\\t\\t// Quite all of outer level\\r\\n\\t\\t\\t\\t\\t$tw.popup.cancel(level);\\r\\n\\t\\t\\t\\t\\t// Level up\\r\\n\\t\\t\\t\\t\\tlevel++;\\r\\n\\t\\t\\t\\t\\t// Store reference to tiddler to be previewed for level\\r\\n\\t\\t\\t\\t\\twiki.setText(preview + level + \\\"-tiddler\\\", \\\"text\\\", null, self.to);\\r\\n\\t\\t\\t\\t\\t// Store the popup details if not already there\\r\\n\\t\\t\\t\\t\\tif ($tw.popup.findPopup(preview + level) === -1) {\\r\\n\\t\\t\\t\\t\\t\\t// Show popup with timeout, to get past nextTick\\r\\n\\t\\t\\t\\t\\t\\tsetTimeout(function () {\\r\\n\\t\\t\\t\\t\\t\\t\\t// Core popup triggering\\r\\n\\t\\t\\t\\t\\t\\t\\t$tw.popup.triggerPopup({\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// For this tiddler\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdomNode: el,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// The state for this level\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle: preview + level,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twiki: wiki\\r\\n\\t\\t\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t\\t\\t\\tblock = 0;\\r\\n\\t\\t\\t\\t\\t\\t}, 50);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t// A helper to determine whether or not to actually show the popup\\r\\n\\t\\t\\tshow = function () {\\r\\n\\t\\t\\t\\tvar ex, exclude,\\r\\n\\t\\t\\t\\t\\t// By default, show\\r\\n\\t\\t\\t\\t\\tdoShow = 1,\\r\\n\\t\\t\\t\\t\\t// The css classes in which not to display previews for links\\r\\n\\t\\t\\t\\t\\tnot = wiki.getTextReference(defaults + \\\"not\\\", \\\"\\\");\\r\\n\\t\\t\\t\\t// Got any?\\r\\n\\t\\t\\t\\tif (not) {\\r\\n\\t\\t\\t\\t\\t// Split classes and loop\\r\\n\\t\\t\\t\\t\\t$tw.utils.each(not.split(\\\" \\\"), function (n) {\\r\\n\\t\\t\\t\\t\\t\\t// This node\\r\\n\\t\\t\\t\\t\\t\\tvar node = el;\\r\\n\\t\\t\\t\\t\\t\\t// Loop so long as parent-nodes and still displaying\\r\\n\\t\\t\\t\\t\\t\\twhile (node && doShow) {\\r\\n\\t\\t\\t\\t\\t\\t\\t// Node has exclude-class?\\r\\n\\t\\t\\t\\t\\t\\t\\tif ($tw.utils.hasClass(node, n)) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Ok, so we're not showing\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdoShow = 0;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Stop iterating\\r\\n\\t\\t\\t\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t// Next partent\\r\\n\\t\\t\\t\\t\\t\\t\\tnode = node.parentNode;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// Not aborted yet?\\r\\n\\t\\t\\t\\tif (doShow) {\\r\\n\\t\\t\\t\\t\\t// get exclude filter\\r\\n\\t\\t\\t\\t\\texclude = wiki.getTextReference(defaults + \\\"exclude\\\", \\\"\\\");\\r\\n\\t\\t\\t\\t\\t// Fetch excluded titles\\r\\n\\t\\t\\t\\t\\tex = exclude ? wiki.filterTiddlers(exclude) : [];\\r\\n\\t\\t\\t\\t\\t// Title in excludes?\\r\\n\\t\\t\\t\\t\\tif (ex.indexOf(self.to) >= 0) {\\r\\n\\t\\t\\t\\t\\t\\t// Then don't display\\r\\n\\t\\t\\t\\t\\t\\tdoShow = 0;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// Return what we got\\r\\n\\t\\t\\t\\treturn doShow;\\r\\n\\t\\t\\t};\\r\\n\\t\\t// Turn delay to integer\\r\\n\\t\\tdelay = delay !== undefined ? parseInt(delay) : null;\\r\\n\\t\\t// Not a number?\\r\\n\\t\\tif (delay !== null && isNaN(delay)) {\\r\\n\\t\\t\\t// No delay\\r\\n\\t\\t\\tdelay = 0;\\r\\n\\t\\t}\\r\\n\\t\\t// Target tiddler exists?\\r\\n\\t\\tif (to) {\\r\\n\\t\\t\\t// Add handle class\\r\\n\\t\\t\\t$tw.utils.addClass(el, \\\"tc-popup-handle\\\");\\r\\n\\t\\t\\t// Add absolute positioning class\\r\\n\\t\\t\\t$tw.utils.addClass(el, \\\"tc-popup-absolute\\\");\\r\\n\\t\\r\\n\\t\\t\\t// Unified event handler for mouseover, mouseout and mousedown\\r\\n\\t\\t\\tel.addEventListener(\\\"mousedown\\\", function (event) {\\r\\n\\t\\t\\t\\t// Ref to event\\r\\n\\t\\t\\t\\tvar ev = event || window.event;\\r\\n\\t\\r\\n\\t\\t\\t\\t// Check for middle click\\r\\n\\t\\t\\t\\tif (ev.button === 1 && wiki.getTextReference(\\\"$:/plugins/tobibeer/preview/config/middleclickpreview\\\", \\\"enable\\\") === \\\"enable\\\") {\\r\\n\\t\\t\\t\\t\\t// Prevent default middle click behavior\\r\\n\\t\\t\\t\\t\\tev.preventDefault();\\r\\n\\t\\t\\t\\t\\t// Show preview popup immediately\\r\\n\\t\\t\\t\\t\\tshowPopup(self, el);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\t\\r\\n\\t\\t\\t// Loop new event handlers\\r\\n\\t\\t\\t[\\\"mouseover\\\", \\\"mouseout\\\"].forEach(function (e) {\\r\\n\\t\\t\\t\\t// Create event listener\\r\\n\\t\\t\\t\\tel.addEventListener(e, function (event) {\\r\\n\\t\\t\\t\\t\\t// Ref to event\\r\\n\\t\\t\\t\\t\\tvar ev = event || window.event;\\r\\n\\t\\t\\t\\t\\t// On mouseover\\r\\n\\t\\t\\t\\t\\tif (e === \\\"mouseover\\\") {\\r\\n\\t\\t\\t\\t\\t\\t// Actually showing anything?\\r\\n\\t\\t\\t\\t\\t\\tif (show()) {\\r\\n\\t\\t\\t\\t\\t\\t\\t// No keycode?\\r\\n\\t\\t\\t\\t\\t\\t\\tif (!ev.keyCode) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Set to 0, for whatever reason the core expects one\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tev.keyCode = 0;\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t// Modifier keys say we show directly?\\r\\n\\t\\t\\t\\t\\t\\t\\tif ($tw.utils.checkKeyDescriptorTB(ev, keys)) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Not yet blocking mousover madness?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif (!block) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Block further firing of mouseover events\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tblock = 1;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Then show\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tshowPopup();\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Modifiers don't match but we got a delay?\\r\\n\\t\\t\\t\\t\\t\\t\\t} else if (delay !== null) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// No more blocking of mouseover events\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tblock = 0;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Set timeout and wait to show popup\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tself.previewTimeout = setTimeout(showPopup, delay);\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t// Mouseout\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t// No more blocking of mouseover events\\r\\n\\t\\t\\t\\t\\t\\tblock = 0;\\r\\n\\t\\t\\t\\t\\t\\t// No more waiting for the popup\\r\\n\\t\\t\\t\\t\\t\\tclearTimeout(self.previewTimeout);\\r\\n\\t\\t\\t\\t\\t\\t// close popup\\r\\n\\t\\t\\t\\t\\t\\t// if next object to move mouse to is not a popup\\r\\n\\t\\t\\t\\t\\t\\tif (!event.relatedTarget?.classList.contains(\\\"tc-preview-tiddler\\\")) {\\r\\n\\t\\t\\t\\t\\t\\t\\t// then close popup\\r\\n\\t\\t\\t\\t\\t\\t\\t$tw.popup.cancel(Math.max(0, getInfo(el).popupLevel));\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t});\\r\\n=======\\r\\n// Hijack core link widget render()\\r\\nCoreLink.prototype.render = function () {\\r\\n\\t// Run core handler\\r\\n\\trenderCore.apply(this, arguments);\\r\\n\\tvar self = this,\\r\\n\\twiki = this.wiki,\\r\\n\\t// The link node\\r\\n\\tel = this.domNodes[0],\\r\\n\\t// Target tiddler\\r\\n\\tto = wiki.getTiddler(self.to),\\r\\n\\t// Shortcut to defaults namespace\\r\\n\\tdefaults = '$:/plugins/tobibeer/preview/defaults/',\\r\\n\\t// Shortcut to preview namespace\\r\\n\\tpreview = '$:/temp/tobibeer/preview-',\\r\\n\\t// Modifier keys to quick-show the popup w/o delay\\r\\n\\tkeys = $tw.utils.parseKeyDescriptorTB(wiki.getTextReference(defaults + 'keys', '').toUpperCase()),\\r\\n\\t// Delay for popup rendering\\r\\n\\tdelay = wiki.getTextReference(defaults + 'delay').toUpperCase(),\\r\\n\\t//Check if popup already open\\r\\n\\tgetInfo = function (el) {\\r\\n\\t\\t// Get current popup level\\r\\n\\t\\tvar info = $tw.popup.popupInfo(el),\\r\\n\\t\\t// Get current popup level\\r\\n\\t\\tlevel = info.popupLevel;\\r\\n\\t\\treturn wiki.getTextReference(preview + level) && wiki.getTextReference(preview + level + '-tiddler') === self.to\\r\\n\\t\\t? null\\r\\n\\t\\t: info;\\r\\n\\t},\\r\\n\\t// Displays the preview popup\\r\\n\\tshowPopup = function () {\\r\\n\\t\\tvar level,\\r\\n\\t\\t// Get info (only if not open yet)\\r\\n\\t\\tinfo = getInfo(el);\\r\\n\\t\\t// Not open yet and not yet blocking mouseover madness?\\r\\n\\t\\tif (info) {\\r\\n\\t\\t// Get current popup level\\r\\n\\t\\tlevel = info.popupLevel;\\r\\n\\t\\t// Stop waiting for other popups to pop up\\r\\n\\t\\tclearTimeout(self.previewTimeout);\\r\\n\\t\\t// Quite all of outer level\\r\\n\\t\\t$tw.popup.cancel(level);\\r\\n\\t\\t// Level up\\r\\n\\t\\tlevel++;\\r\\n\\t\\t// Store reference to tiddler to be previewed for level\\r\\n\\t\\twiki.setText(preview + level + '-tiddler', 'text', null, self.to);\\r\\n\\t\\t// Store the popup details if not already there\\r\\n\\t\\tif ($tw.popup.findPopup(preview + level) === -1) {\\r\\n\\t\\t\\t// Show popup with timeout, to get past nextTick\\r\\n\\t\\t\\tsetTimeout(function () {\\r\\n\\t\\t\\t// Core popup triggering\\r\\n\\t\\t\\t$tw.popup.triggerPopup({\\r\\n\\t\\t\\t\\t// For this tiddler\\r\\n\\t\\t\\t\\tdomNode: el,\\r\\n\\t\\t\\t\\t// The state for this level\\r\\n\\t\\t\\t\\ttitle: preview + level,\\r\\n\\t\\t\\t\\twiki: wiki,\\r\\n>>>>>>> parent of 7d93692 (Revert \\\"仅用vscode格式化linkjs\\\")\\r\\n\\t\\t\\t});\\r\\n\\t\\t\\tblock = 0;\\r\\n\\t\\t\\t}, 50);\\r\\n\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\t// A helper to determine whether or not to actually show the popup\\r\\n\\tshow = function () {\\r\\n\\t\\tvar ex,\\r\\n\\t\\texclude,\\r\\n\\t\\t// By default, show\\r\\n\\t\\tdoShow = 1,\\r\\n\\t\\t// The css classes in which not to display previews for links\\r\\n\\t\\tnot = wiki.getTextReference(defaults + 'not', '');\\r\\n\\t\\t// Got any?\\r\\n\\t\\tif (not) {\\r\\n\\t\\t// Split classes and loop\\r\\n\\t\\t$tw.utils.each(not.split(' '), function (n) {\\r\\n\\t\\t\\t// This node\\r\\n\\t\\t\\tvar node = el;\\r\\n\\t\\t\\t// Loop so long as parent-nodes and still displaying\\r\\n\\t\\t\\twhile (node && doShow) {\\r\\n\\t\\t\\t// Node has exclude-class?\\r\\n\\t\\t\\tif ($tw.utils.hasClass(node, n)) {\\r\\n\\t\\t\\t\\t// Ok, so we're not showing\\r\\n\\t\\t\\t\\tdoShow = 0;\\r\\n\\t\\t\\t\\t// Stop iterating\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t// Next partent\\r\\n\\t\\t\\tnode = node.parentNode;\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\t\\t}\\r\\n\\t\\t// Not aborted yet?\\r\\n\\t\\tif (doShow) {\\r\\n\\t\\t// get exclude filter\\r\\n\\t\\texclude = wiki.getTextReference(defaults + 'exclude', '');\\r\\n\\t\\t// Fetch excluded titles\\r\\n\\t\\tex = exclude ? wiki.filterTiddlers(exclude) : [];\\r\\n\\t\\t// Title in excludes?\\r\\n\\t\\tif (ex.indexOf(self.to) >= 0) {\\r\\n\\t\\t\\t// Then don't display\\r\\n\\t\\t\\tdoShow = 0;\\r\\n\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t// Return what we got\\r\\n\\t\\treturn doShow;\\r\\n\\t};\\r\\n\\t// Turn delay to integer\\r\\n\\tdelay = delay !== undefined ? parseInt(delay) : null;\\r\\n\\t// Not a number?\\r\\n\\tif (delay !== null && isNaN(delay)) {\\r\\n\\t// No delay\\r\\n\\tdelay = 0;\\r\\n\\t}\\r\\n\\t// Target tiddler exists?\\r\\n\\tif (to) {\\r\\n\\t// Add handle class\\r\\n\\t$tw.utils.addClass(el, 'tc-popup-handle');\\r\\n\\t// Add absolute positioning class\\r\\n\\t$tw.utils.addClass(el, 'tc-popup-absolute');\\r\\n\\r\\n<<<<<<< HEAD\\r\\n\\t// Hijack click handler\\r\\n\\tCoreLink.prototype.handleClickEvent = function () {\\r\\n\\t\\t// Run core handler\\r\\n\\t\\tclickCore.apply(this, arguments);\\r\\n\\t\\t// Abort popup delay timeout\\r\\n\\t\\tclearTimeout(this.previewTimeout);\\r\\n\\t\\t// Close popups\\r\\n\\t\\t$tw.popup.cancel(\\r\\n\\t\\t\\tMath.max(\\r\\n\\t\\t\\t\\t0,\\r\\n\\t\\t\\t\\t$tw.popup.popupInfo(this.domNodes[0]).popupLevel\\r\\n\\t\\t\\t)\\r\\n\\t\\t);\\r\\n\\t};\\r\\n=======\\r\\n\\t\\t\\t\\t// Unified event handler for mouseover, mouseout and mousedown\\r\\n\\tel.addEventListener('mousedown', function (event) {\\r\\n\\t\\t// Ref to event\\r\\n\\t\\tvar ev = event || window.event;\\r\\n\\r\\n\\t\\t// Check for middle click\\r\\n\\t\\tif (ev.button === 1 && wiki.getTextReference('$:/plugins/tobibeer/preview/config/middleclickpreview', 'enable') === 'enable') {\\r\\n\\t\\t// Prevent default middle click behavior\\r\\n\\t\\tev.preventDefault();\\r\\n\\t\\t// Show preview popup immediately\\r\\n\\t\\tshowPopup(self, el);\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\r\\n\\t// Loop new event handlers\\r\\n\\t['mouseover', 'mouseout'].forEach(function (e) {\\r\\n\\t\\t// Create event listener\\r\\n\\t\\tel.addEventListener(e, function (event) {\\r\\n\\t\\t// Ref to event\\r\\n\\t\\tvar ev = event || window.event;\\r\\n\\t\\t// On mouseover\\r\\n\\t\\tif (e === 'mouseover') {\\r\\n\\t\\t\\t// Actually showing anything?\\r\\n\\t\\t\\tif (show()) {\\r\\n\\t\\t\\t// No keycode?\\r\\n\\t\\t\\tif (!ev.keyCode) {\\r\\n\\t\\t\\t\\t// Set to 0, for whatever reason the core expects one\\r\\n\\t\\t\\t\\tev.keyCode = 0;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t// Modifier keys say we show directly?\\r\\n\\t\\t\\tif ($tw.utils.checkKeyDescriptorTB(ev, keys)) {\\r\\n\\t\\t\\t\\t// Not yet blocking mousover madness?\\r\\n\\t\\t\\t\\tif (!block) {\\r\\n\\t\\t\\t\\t// Block further firing of mouseover events\\r\\n\\t\\t\\t\\tblock = 1;\\r\\n\\t\\t\\t\\t// Then show\\r\\n\\t\\t\\t\\tshowPopup();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// Modifiers don't match but we got a delay?\\r\\n\\t\\t\\t} else if (delay !== null) {\\r\\n\\t\\t\\t\\t// No more blocking of mouseover events\\r\\n\\t\\t\\t\\tblock = 0;\\r\\n\\t\\t\\t\\t// Set timeout and wait to show popup\\r\\n\\t\\t\\t\\tself.previewTimeout = setTimeout(showPopup, delay);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t// Mouseout\\r\\n\\t\\t} else {\\r\\n\\t\\t\\t// No more blocking of mouseover events\\r\\n\\t\\t\\tblock = 0;\\r\\n\\t\\t\\t// No more waiting for the popup\\r\\n\\t\\t\\tclearTimeout(self.previewTimeout);\\r\\n\\t\\t\\t// close popup\\r\\n\\t\\t\\t\\t\\t\\t// if next object to move mouse to is not a popup\\r\\n\\t\\t\\tif(!event.relatedTarget?.classList.contains('tc-preview-tiddler')) {\\r\\n\\t\\t\\t// then close popup\\r\\n\\t\\t\\t\\t$tw.popup.cancel(Math.max(0, getInfo(el).popupLevel));\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t});\\r\\n\\t});\\r\\n\\t}\\r\\n};\\r\\n\\r\\n// Hijack click handler\\r\\nCoreLink.prototype.handleClickEvent = function () {\\r\\n\\t// Run core handler\\r\\n\\tclickCore.apply(this, arguments);\\r\\n\\t// Abort popup delay timeout\\r\\n\\tclearTimeout(this.previewTimeout);\\r\\n\\t// Close popups\\r\\n\\t$tw.popup.cancel(Math.max(0, $tw.popup.popupInfo(this.domNodes[0]).popupLevel));\\r\\n};\\r\\n>>>>>>> parent of 7d93692 (Revert \\\"仅用vscode格式化linkjs\\\")\\r\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/tobibeer/preview/popups\":{\"title\":\"$:/plugins/tobibeer/preview/popups\",\"tags\":\"$:/tags/PageTemplate\",\"text\":\"\\\\define state(num)\\r\\n$:/temp/tobibeer/preview-$num$\\r\\n\\\\end\\n\\n\\\\define classes(num)\\r\\ntc-popup appear appear-block appear-reveal tc-preview-tiddler tc-preview-tiddler-$num$ $(default-classes)$\\r\\n\\\\end\\n\\n\\\\define level(num)\\r\\n<$reveal tag=\\\"div\\\" type=\\\"popup\\\" state=<<state $num$>> class=<<classes $num$>>>\\r\\n<$tiddler tiddler={{$:/temp/tobibeer/preview-$num$-tiddler}}>\\r\\n<$transclude tiddler={{$:/plugins/tobibeer/preview/defaults/template}} mode=\\\"block\\\"/>\\r\\n</$tiddler>\\r\\n</$reveal>\\r\\n\\\\end\\n\\n<$vars default-classes={{$:/plugins/tobibeer/preview/defaults/class}}>\\r\\n<$list filter=\\\"1 2 3 4 5 6 7 8 9\\\">\\r\\n<$macrocall $name=\\\"level\\\" num={{!!title}}/>\\r\\n</$list>\\r\\n</$vars>\"},\"$:/plugins/tobibeer/preview/readme\":{\"title\":\"$:/plugins/tobibeer/preview/readme\",\"text\":\"The plugin $:/plugins/tobibeer/preview enhances the core <<x LinkWidget>> to display a preview of tiddlers when hovering an internal link.\\n\\n<br>\\n\\n; documentation / examples / demos...\\r\\n: http://tobibeer.github.io/tw5-plugins#preview\"},\"$:/plugins/tobibeer/preview/styles\":{\"title\":\"$:/plugins/tobibeer/preview/styles\",\"tags\":\"$:/tags/Stylesheet\",\"text\":\".tc-popup.tc-preview-tiddler{\\r\\n\\tmax-width:600px;\\r\\n\\twidth:100%;\\r\\n\\tpadding:1em;\\r\\n}\\n\\n.tc-popup.appear.appear-block.appear-reveal.tc-preview-tiddler.tc-popup-keep.tc-reveal {\\r\\n\\tword-break: normal;\\r\\n\\tword-wrap: break-word;\\r\\n\\twhite-space: pre-wrap;\\r\\n}\"},\"$:/plugins/tobibeer/preview/template\":{\"title\":\"$:/plugins/tobibeer/preview/template\",\"text\":\"{{||$:/core/ui/ViewTemplate/tags}}\\n\\n<$transclude mode=\\\"block\\\"/>\"}}}"}